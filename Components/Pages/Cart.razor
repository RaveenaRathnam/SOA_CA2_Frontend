@page "/cart"
@inject ApiService ApiService
@using SOA_CA2_Frontend.Models
@using SOA_CA2_Frontend.Services

<link href="/css/Cart.css" rel="stylesheet" />

<h2>Shopping Cart</h2>

@if (cartItems == null)
{
    <p>Loading cart items...</p>
}
else if (cartItems.Count == 0)
{
    <p>Your cart is empty.</p>
}
else
{
    <div class="cart-container">
        @foreach (var item in cartItems)
        {
            <div class="cart-item">
                <img src="@item.imageUrl" alt="@item.productName" class="product-image" />
                <h3>@item.productName</h3>
                <p>Price: $@item.price</p>
                <p>Quantity: @item.quantity</p>
                <button class="remove-btn" @onclick="() => RemoveItem(item.product_Id)">Remove</button>
            </div>
        }
        <button class="clear-btn" @onclick="ClearCart">Clear Cart</button>
    </div>
   
}

@code {
    private List<CartItemModel> cartItems = new();
    

    protected override async Task OnInitializedAsync()
    {
        await LoadCartItems();
    }

    private async Task LoadCartItems()
    {
        cartItems = await ApiService.GetCartItemsAsync();

        // Fetch additional product details for each cart item
        foreach (var cartItem in cartItems)
        {
            var product = await ApiService.GetProductByIdAsync(cartItem.product_Id);
            if (product != null)
            {
                cartItem.productName = product.product_Name;
                cartItem.price = product.price;
                cartItem.imageUrl = product.imageUrl;
            }
        }
    }


    private async Task RemoveItem(int productId)
    {
        bool success = await ApiService.RemoveFromCartAsync(productId);  

        if (success)
        {
            // Refresh the cart items after removal
            await LoadCartItems();
        }
        else
        {
            Console.WriteLine("Failed to remove item from cart.");
        }
    }


    private async Task ClearCart()
    {
        bool success = await ApiService.ClearCartAsync(); 

        if (success)
        {
            // Refresh the cart items after clearing the cart
            await LoadCartItems();
        }
        else
        {
            Console.WriteLine("Failed to clear cart.");
        }
    }

}
