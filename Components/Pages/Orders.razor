@page "/orders"
@inject ApiService ApiService
@inject NavigationManager NavigationManager
@using SOA_CA2_Frontend.Models
@using SOA_CA2_Frontend.Services

<link href="/css/Orders.css" rel="stylesheet" />

<h2 style="text-align:center">My Orders</h2>

@if (orders == null)
{
    <p>Loading orders...</p>
}
else if (orders.Count == 0)
{
    <p>You have not placed any orders yet.</p>
}
else
{
    <div class="orders-container">
        @foreach (var order in orders)
        {
            <div class="order">
                <h3>Order ID: @order.order_Id</h3>
                <p>Order Date: @order.order_Date.ToString("MM/dd/yyyy HH:mm")</p>
                <p>Total Amount: $@order.total_Amount</p>
                <p>Status: @GetOrderStatus(order.status)</p>
                <h4>Items:</h4>
                <ul>
                    @foreach (var item in order.orderItems)
                    {
                        <li>
                            Product ID: @item.product_Id - quantity: @item.quantity - Price: $@item.price
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
}

@code {
    private List<OrderModel> orders;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadOrders();
    }

    private async Task LoadOrders()
    {
        orders = await ApiService.GetOrdersByUserIdAsync();
    }

    private string GetOrderStatus(int status)
    {
        // Assuming status is an integer that represents different statuses
        return status switch
        {
            1 => "Pending",
            2 => "Shipped",
            3 => "Delivered",
            4 => "Cancelled",
            _ => "Unknown",
        };
    }
}
